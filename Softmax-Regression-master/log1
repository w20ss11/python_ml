loadMNISTImages return: (784, 60000)
loadMNISTLabels return: (60000, 1)
training_data: (784, 60000)
training_labels: (60000, 1)
softmaxCost start:##
ground_truth: (10, 60000)
theta: (10, 784)
input: (784, 60000)
hypothesis: (10, 60000)
numpy.sum(hypothesis, axis = 0): (60000,)
numpy.sum(hypothesis, axis = 0:) (60000,) (10, 60000)
cost_examples: (10, 60000)
theta_squared: (10, 784)
theta_grad: (7840,)
softmaxCost start:##
ground_truth: (10, 60000)
theta: (10, 784)
input: (784, 60000)
hypothesis: (10, 60000)
numpy.sum(hypothesis, axis = 0): (60000,)
numpy.sum(hypothesis, axis = 0:) (60000,) (10, 60000)
cost_examples: (10, 60000)
theta_squared: (10, 784)
theta_grad: (7840,)
softmaxCost start:##
ground_truth: (10, 60000)
theta: (10, 784)
input: (784, 60000)
hypothesis: (10, 60000)
numpy.sum(hypothesis, axis = 0): (60000,)
numpy.sum(hypothesis, axis = 0:) (60000,) (10, 60000)
cost_examples: (10, 60000)
theta_squared: (10, 784)
theta_grad: (7840,)
softmaxCost start:##
ground_truth: (10, 60000)
theta: (10, 784)
input: (784, 60000)
hypothesis: (10, 60000)
numpy.sum(hypothesis, axis = 0): (60000,)
numpy.sum(hypothesis, axis = 0:) (60000,) (10, 60000)
cost_examples: (10, 60000)
theta_squared: (10, 784)
theta_grad: (7840,)
softmaxCost start:##
ground_truth: (10, 60000)
theta: (10, 784)
input: (784, 60000)
hypothesis: (10, 60000)
numpy.sum(hypothesis, axis = 0): (60000,)
numpy.sum(hypothesis, axis = 0:) (60000,) (10, 60000)
cost_examples: (10, 60000)
theta_squared: (10, 784)
theta_grad: (7840,)
softmaxCost start:##
ground_truth: (10, 60000)
theta: (10, 784)
input: (784, 60000)
hypothesis: (10, 60000)
numpy.sum(hypothesis, axis = 0): (60000,)
numpy.sum(hypothesis, axis = 0:) (60000,) (10, 60000)
cost_examples: (10, 60000)
theta_squared: (10, 784)
theta_grad: (7840,)
softmaxCost start:##
ground_truth: (10, 60000)
theta: (10, 784)
input: (784, 60000)
hypothesis: (10, 60000)
numpy.sum(hypothesis, axis = 0): (60000,)
numpy.sum(hypothesis, axis = 0:) (60000,) (10, 60000)
cost_examples: (10, 60000)
theta_squared: (10, 784)
theta_grad: (7840,)
softmaxCost start:##
ground_truth: (10, 60000)
theta: (10, 784)
input: (784, 60000)
hypothesis: (10, 60000)
numpy.sum(hypothesis, axis = 0): (60000,)
numpy.sum(hypothesis, axis = 0:) (60000,) (10, 60000)
cost_examples: (10, 60000)
theta_squared: (10, 784)
theta_grad: (7840,)
softmaxCost start:##
ground_truth: (10, 60000)
theta: (10, 784)
input: (784, 60000)
hypothesis: (10, 60000)
numpy.sum(hypothesis, axis = 0): (60000,)
numpy.sum(hypothesis, axis = 0:) (60000,) (10, 60000)
cost_examples: (10, 60000)
theta_squared: (10, 784)
theta_grad: (7840,)
softmaxCost start:##
ground_truth: (10, 60000)
theta: (10, 784)
input: (784, 60000)
hypothesis: (10, 60000)
numpy.sum(hypothesis, axis = 0): (60000,)
numpy.sum(hypothesis, axis = 0:) (60000,) (10, 60000)
cost_examples: (10, 60000)
theta_squared: (10, 784)
theta_grad: (7840,)
softmaxCost start:##
ground_truth: (10, 60000)
theta: (10, 784)
input: (784, 60000)
hypothesis: (10, 60000)
numpy.sum(hypothesis, axis = 0): (60000,)
numpy.sum(hypothesis, axis = 0:) (60000,) (10, 60000)
cost_examples: (10, 60000)
theta_squared: (10, 784)
theta_grad: (7840,)
softmaxCost start:##
ground_truth: (10, 60000)
theta: (10, 784)
input: (784, 60000)
hypothesis: (10, 60000)
numpy.sum(hypothesis, axis = 0): (60000,)
numpy.sum(hypothesis, axis = 0:) (60000,) (10, 60000)
cost_examples: (10, 60000)
theta_squared: (10, 784)
theta_grad: (7840,)
softmaxCost start:##
ground_truth: (10, 60000)
theta: (10, 784)
input: (784, 60000)
hypothesis: (10, 60000)
numpy.sum(hypothesis, axis = 0): (60000,)
numpy.sum(hypothesis, axis = 0:) (60000,) (10, 60000)
cost_examples: (10, 60000)
theta_squared: (10, 784)
theta_grad: (7840,)
loadMNISTImages return: (784, 10000)
loadMNISTLabels return: (10000, 1)
Accuracy : 0.8996
